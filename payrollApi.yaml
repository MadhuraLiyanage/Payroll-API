swagger: "2.0"
info:
  title: Payroll Web API Document
  description: Payroll RESTful API documentation
  version: 1.0
  contact:
    email: madhuraliyanage1977@gmail.com
  license:
    name: Apache 2.0
    url: "http://apache.org/"


host: "localhost:3040"
basePath: /api/v1
schemes: 
  - http
  - https

paths:
  /auth:
    post: 
      summary: Authentication endpoint
      tags:
        - authorization
      description: User will be authenticated and return access tokens
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
      - in: body
        name: Auth
        schema:
          $ref: "#/components/schemas/AuthIn"
      responses:
        200:
          description: Successful    
          name: Auth
          schema:
            $ref: "#/components/schemas/AuthOut"             
        400:
          description: User error
        404:
          description: Not found
        500:
          description: Internal server error
  /auth/refresh-token:
    post: 
      summary: Generate new tokens
      tags:
        - authorization
      description: Generate new access token and refresh token using old refresh token, when access token expires
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
      - in: body
        name: RefreshToken
        schema:
          $ref: "#/components/schemas/RefreshTokenIn"
      responses:
        200:
          description: Successful    
          name: RefreshToken
          schema:
            $ref: "#/components/schemas/RefreshTokenOut"             
        400:
          description: User error
        404:
          description: Not found
        500:
          description: Internal server error
  /who-am-i:
    get:    
      summary: Current user details
      tags:
        - who-am-i      
      description: Current user details will be extracted from access token
      produces:
        - application/json
      security:
        - authentication: []        
      responses:
        200:
          description: Successful    
          name: Auth
          schema:
            $ref: "#/components/schemas/WhoAmIOut"             
        400:
          description: User error
        404:
          description: Not found
        500:
          description: Internal server error

securityDefinitions:
  authentication:
    type: apiKey
    name: Authorization
    in: header

components:
  schemas:
    AuthIn:
      type: object     
      properties:
        userName:
          type: string
          description: User name
          required: true
        password:
          type: string
          description: Password
          required: true
                  example:
                    userName: "indu"
                    password: "sample1"
    AuthOut:
      type: object     
      properties:
        status:
          type: string
          description: Status of the response 00 successful, 99 failed
        responseMessage:
          type: string
          description: response message
        tokenStatus:
          type: string
          description: Status of the token
        userID: 
          type: string
          description: Requested user ID
        data:
          type: array
          items: 
            properties:
              accessToken:
                type: string
                description: JWT access token after validation the user
              refreshToken:
                type: string
                description: JWT refresh token after validation the user
              id:
                type: int
                description: The auto-generated id of the user
              userName:
                type: string
                description: The user name
              userEmail:
                type: string
                description: Email address
              isUserActive:
                type: boolean
                description: User active
    RefreshTokenIn:
      type: object     
      properties:
        refreshToken:
          type: string
          description: Refresh Token
          required: true
                  example:
                    refreshToken: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6Im1hZGh1cmEiLCJ1c2VyRnVsbE5hbWUiOiJNYWRodXJ"
    RefreshTokenOut:
      type: object     
      properties:
        status:
          type: string
          description: Status of the response 00 successful, 99 failed
        responseMessage:
          type: string
          description: response message
        data:
          type: array
          items: 
            properties:
              accessToken:
                type: string
                description: New JWT access token generated using old refresh token
              refreshToken:
                type: string
                description: New JWT refresh token generated using old refresh token
    WhoAmIOut:
      type: object     
      properties:
        status:
          type: string
          description: Status of the response 00 successful, 99 failed
        responseMessage:
          type: string
          description: response message
        data:
          type: array
          items: 
            properties:
              userId:
                type: string
                description: JWT token after validation the user
              id:
                type: integer
                description: User ID
              userName:
                type: string
                description: User full name
              userEmail:
                type: string
                description: user email address
              userContactNo:
                type: string
                description: User contact number


